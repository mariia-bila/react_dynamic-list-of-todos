{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","state","value","selected","getPreparedTodos","props","todos","filter","todo","completed","callback","this","filtredTodos","title","includes","className","placeholder","onChange","event","setState","target","map","htmlFor","String","id","type","readOnly","onClick","userId","React","Component","BASE_URL","getUsers","fetch","then","response","json","CurrentUser","user","getUser","users","find","prevProps","name","email","phone","App","selectedUserId","toSelectUser","todosFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab0adae4.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../types/Todo';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[]\n  callback: (user:number) => void,\n};\n\ntype State = {\n  value: string,\n  selected: string,\n};\n\nexport class TodoList extends React.Component<Props, State> {\n  state: State = {\n    value: '',\n    selected: 'all',\n  };\n\n  // shuffleArray = (todos: Todo[]) => {\n  //   const array = todos;\n\n  //   for (let i = array.length - 1; i > 0; i -= 1) {\n  //     const j = Math.floor(Math.random() * (i + 1));\n  //     const temp = array[i];\n\n  //     array[i] = array[j];\n  //     array[j] = temp;\n  //   }\n\n  //   return array;\n  // };\n\n  getPreparedTodos = () => this.props.todos.filter(todo => {\n    switch (this.state.selected) {\n      case 'completed':\n        return todo.completed === true;\n      case 'active':\n        return todo.completed === false;\n      default:\n        return todo;\n    }\n  });\n\n  render() {\n    const { callback } = this.props;\n    const filtredTodos = this.getPreparedTodos()\n      .filter(todo => todo.title.includes(this.state.value));\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <input\n            placeholder=\"Enter the title of todo\"\n            value={this.state.value}\n            onChange={(event) => this.setState({ value: event.target.value })}\n          />\n\n          <select\n            value={this.state.selected}\n            onChange={(event) => this.setState({ selected: event.target.value })}\n          >\n            <option value=\"all\">\n              All\n            </option>\n\n            <option value=\"active\">\n              Active\n            </option>\n\n            <option value=\"completed\">\n              Completed\n            </option>\n          </select>\n\n          {/* <button\n            type=\"button\"\n            onClick={() => this.setState({ displayedTodos: this.shuffleArray(preparedTodos) })}\n          >\n            Randomize\n          </button> */}\n          <ul className=\"TodoList__list\">\n            {filtredTodos.map(todo => (\n              <li className=\"TodoList__item TodoList__item--unchecked\" key={todo.id}>\n                <label htmlFor={String(todo.id)}>\n                  <input\n                    type=\"checkbox\"\n                    id={String(todo.id)}\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                    \"\n                  type=\"button\"\n                  onClick={() => {\n                    callback(todo.userId);\n                  }}\n                >\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","// eslint-disable-next-line\nconst BASE_URL = `https://mate.academy/students-api`;\n\nexport const getTodos = () => {\n  return fetch(`${BASE_URL}/todos`)\n    .then(response => response.json());\n};\n\nexport const getUsers = () => {\n  return fetch(`${BASE_URL}/users`)\n    .then(response => response.json());\n};\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { getUsers } from '../../api';\nimport { User } from '../types/User';\n\ntype Props = {\n  userId: number,\n};\n\ntype State = {\n  user: User | null,\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state:State = {\n    user: null,\n  };\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.userId !== this.props.userId) {\n      this.getUser();\n    }\n  }\n\n  getUser = () => {\n    getUsers()\n      .then(users => {\n        this.setState({\n          user: users.find((user:User) => user.id === this.props.userId),\n        });\n      });\n  };\n\n  render() {\n    return (\n      this.state.user && (\n        <div className=\"CurrentUser\">\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              Selected user:\n              {this.props.userId}\n            </span>\n          </h2>\n\n          <h3 className=\"CurrentUser__name\">{this.state.user.name}</h3>\n          <p className=\"CurrentUser__email\">{this.state.user.email}</p>\n          <p className=\"CurrentUser__phone\">{this.state.user.phone}</p>\n\n          <button\n            type=\"button\"\n            onClick={() => this.setState({ user: null })}\n          >\n            Clear\n          </button>\n        </div>\n      )\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\nimport { Todo } from './components/types/Todo';\n\ninterface State {\n  selectedUserId: number;\n  todos: Todo[] | null\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n    todos: null,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todosFromServer => {\n        this.setState({ todos: todosFromServer });\n      });\n  }\n\n  toSelectUser = (userId: number) => {\n    if (userId !== this.state.selectedUserId) {\n      this.setState({\n        selectedUserId: userId,\n      });\n    }\n  };\n\n  render() {\n    const { selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        {this.state.todos && (\n          <div className=\"App__sidebar\">\n            <TodoList todos={this.state.todos} callback={this.toSelectUser} />\n          </div>\n        )}\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser userId={this.state.selectedUserId} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}